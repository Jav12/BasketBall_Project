/* ****************************************************************
'* *
'* File name: basketball.java *
'* *
'* Programmer: Nicole Hurst *
'* *
'* Course: Graphics Games Programming (CISC 4391) *
'* *
'* Professor: Isaac Gang *
'* *
'* Institution: UMHB *
'* *
'* Problem: Finish basketball program*
'* *
'* Due Date: Fall 09/24/13 *
'* *
***************************************************************** */

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Nicole
 */
// package default

// package default

import fang2.core.GameLoop;
import java.util.ArrayList;
import fang2.core.Game;
import static fang2.core.Game.getColor;
import fang2.sprites.RectangleSprite;
import fang2.sprites.StringSprite;
import fang2.sprites.CompositeSprite;

/**
 * Draw a basket (for "basketball") on the screen. 
 */

public class BasketBall
  extends Game
{
  /**
   * Setup the sprites (and anything else) necessary for our game. 
   * Use the new operator to construct three RectangleSprites. Each is 
   * sized and located in screens (screen is 0.0 to 1.0 from left to right
   * across and 0.0 to 1.0 down from the top to bottom (y-axis is backward).
   * 
   */    
    
   private StringSprite hp1;
   private StringSprite hp2;
   
   private int numofshots1;
   private int numofshots2;
   
   private int health1;
   private int health2;
   
   private int penalty = 10;
   
   private int goalChance;
   
   private CompositeSprite goal;
   
    // width, height (in screens); location is (x, y), in screens
    private RectangleSprite rectangleBottom; 
  
    private RectangleSprite rectangleBackboard;
  
    private RectangleSprite rectangleFrontboard;
    
   
    private BasketBallLauncherSprite launcher;
    
    private RectangleSprite rectangleBottom2; 
  
    private RectangleSprite rectangleBackboard2;
  
    private RectangleSprite rectangleFrontboard2;
    
    private BasketBallLauncherSprite launcher2;
    
   ////////////////////END VARIABLES/////////////////////
  @Override
  public void setup() {
    health1 = 100;
    health2 = 100;
    
    numofshots1=5;
    numofshots2=5;
      
    rectangleBottom = new RectangleSprite(0.25, 0.05);
    rectangleBottom.setLocation(0.325, 0.475);
    
    rectangleBackboard = new RectangleSprite(0.05, 0.4);
    //rectangleBackboard.setLocation(0.75, 0.3);
    rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
    
    rectangleFrontboard = new RectangleSprite(0.05, 0.2);
    //rectangleFrontboard.setLocation(0.50, 0.4);
    rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
    
    launcher = new BasketBallLauncherSprite(0.05, 0.5);
    launcher2 = new BasketBallLauncherSprite(0.95, 0.5);
    
    hp1 = new StringSprite();
    hp1.setLineHeight(0.10);
    hp1.setColor(getColor("red"));
    hp1.topJustify();// move location to upper-left corner
    hp1.leftJustify();
    hp1.setLocation(0.00, 0.00);
    hp1.setLineHeight(.05);
    hp1.setText("Player 1: " + health1);
    
    hp2 = new StringSprite();
    hp2.setLineHeight(0.10);
    hp2.setColor(getColor("blue"));
    hp2.topJustify();// move location to upper-left corner
    hp2.leftJustify();
    hp2.setLocation(0.7, 0.00);
    hp2.setLineHeight(.05);
    hp2.setText("Player 2: " + health2);
    
    goal = new CompositeSprite();
    goal.addSprite(rectangleBottom);
    goal.addSprite(rectangleFrontboard);
    goal.addSprite(rectangleBackboard);
    
    //launcher2.setLocation(0.00, .9);
    
     rectangleBottom2 = new RectangleSprite(0.25, 0.05);
    rectangleBottom2.setLocation(0.675, 0.475);
    rectangleBottom2.setColor(getColor("purple"));
    
    rectangleBackboard2 = new RectangleSprite(0.05, 0.4);
    //rectangleBackboard.setLocation(0.75, 0.3);
    rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
    rectangleBackboard2.setColor(getColor("purple"));
    
    
    rectangleFrontboard2 = new RectangleSprite(0.05, 0.2);
    //rectangleFrontboard.setLocation(0.50, 0.4);
    rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
    rectangleFrontboard2.setColor(getColor("purple"));
    
    
    addSprite(rectangleBottom);
    addSprite(rectangleBackboard);
    addSprite(rectangleFrontboard);
    
    addSprite(rectangleBottom2);
    addSprite(rectangleBackboard2);
   addSprite(rectangleFrontboard2);
    
    //addSprite(goal);
    addSprite(launcher);
    //addSprite(launcher2);
    addSprite(hp1);
    addSprite(hp2);
    
 
    
    }
  
  ////////////////////END SETUP/////////////////////
  
   //@Override
  public void main() {
 checkScore();  


	  
}   
  
   public void player1Turn(){
	   while (numofshots1>0){
	   
	   if (health1 <= 0)
	    {

	    hp1.setText("You lose!");
	    launcher.removeFromCanvas();
	    launcher2.removeFromCanvas();
	    launcher.projectile.removeFromCanvas();
	    launcher2.projectile.removeFromCanvas();
	    }
	   
	   else if (health2 <= 0)
	    {

	    hp2.setText("You lose!");
	    launcher.removeFromCanvas();
	    launcher2.removeFromCanvas();
	    launcher.projectile.removeFromCanvas();
	    launcher2.projectile.removeFromCanvas();
	    }
	   
	   else   if(goalChance == 2)
	   {
	       specialGoalOne();
	       if (launcher.projectile.getMaxY() >= .99)
	       {
	            health1 = health1 - penalty;
	            hp1.setText("HP: " + health1);
	            launcher.projectile.removeFromCanvas();
	            restartBallOne();
	            resetGoalOne();
	            chance();        
	       }
	       if (launcher.projectile.intersects(rectangleBottom))
	       {
	            health2 = health2 - penalty;
	            hp2.setText("HP: " + health2);
	            launcher.projectile.removeFromCanvas();
	            restartBallOne();
	            resetGoalOne();
	            chance();        
	       }
	        
	   if (launcher.projectile.intersects(rectangleBottom2))
	    {
	        
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	        
	    }
	      
	   }  
	   
	   else if(goalChance == 3)
	   {
	       specialGoalTwo();
	     
	      if (launcher.projectile.intersects(rectangleBottom))
	    {

	        health2 = health2 - 10;
	        hp2.setText("HP: " + health2);
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	    }
	     if (launcher.projectile.getMaxY() >= .99)
	    {

	        health1 = health1 - 10;
	        hp1.setText("HP: " + health1);
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));

	        
	    }
	     
	     if (launcher.projectile.intersects(rectangleBottom2))
	    {
	        
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	        
	    }
	    
	   }
	   
	   else if(goalChance == 5)
	   {
	       specialBallOne();
	       if (launcher.projectile.getMaxY() >= .99)
	       {
	            health1 = health1 - 10;
	            hp1.setText("HP: " + health1);
	            launcher.projectile.removeFromCanvas();
	            restartBallOne();
	            resetBallOne();
	            chance();        
	       }
	       if (launcher.projectile.intersects(rectangleBottom))
	       {
	            health1 = health1 + 10;
	            health2 = health2 - penalty;
	            hp1.setText("HP: " + health1);
	            hp2.setText("HP: " + health2);
	            launcher.projectile.removeFromCanvas();
	            restartBallOne();
	            resetBallOne();
	            chance();            
	       }
	        
	    
	    if (launcher.projectile.intersects(rectangleBottom2))
	    {
	        
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	        
	    }
	      
	   }
	   else if(goalChance == 9)
	   {
	       
	       
	        if (launcher.projectile.intersects(rectangleBottom))
	    {

	        health2 = health2 - 10;
	        hp2.setText("HP: " + health2);
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	    }
	    if (launcher.projectile.getMaxY() >= .99)
	    {

	        health1 = health1 - 10;
	        hp1.setText("HP: " + health1);
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));

	        
	    }
	    
	    if (launcher.projectile.intersects(rectangleBottom2))
	    {
	        
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	        
	    }
	   
	   }
	   
	   else  if (launcher.projectile.intersects(rectangleBottom))
	    {

	        health2 = health2 - penalty;
	        hp2.setText("HP: " + health2);
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	    }
	    else if (launcher.projectile.getMaxY() >= .99)
	    {

	        health1 = health1 - penalty;
	        hp1.setText("HP: " + health1);
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));

	        
	    }
	  
	   else if (launcher.projectile.intersects(rectangleBottom2))
	    {
	        
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	        
	    }
	   
	   numofshots1--;}
	   launcher.projectile.removeFromCanvas();
	   player2Turn();
   }
   
 public void player2Turn(){
	 
	    
	   addSprite(launcher2);
	   while(numofshots2>0){
	   if(goalChance == 2)
	   {
	       specialGoalOne();
	       
	       if (launcher2.projectile.intersects(rectangleBottom2))
	    {

	        health1 = health1 - 10;
	        hp1.setText("HP: " + health1);
	        launcher2.projectile.removeFromCanvas();
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	    }
	    if (launcher2.projectile.getMaxY() >= .99)
	    {

	        health2 = health2 - 10;
	        hp2.setText("HP: " + health2);
	        launcher2.projectile.removeFromCanvas();
	        restartBallTwo();
	        chance();
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));      
	    }
	    
	  
	    if (launcher2.projectile.intersects(rectangleBottom))
	    {
	        
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	        
	    }
	    
	   } 
	   else if(goalChance == 3)
	   {
	       specialGoalTwo();
	       if (launcher2.projectile.getMaxY() >= .99)
	       {
	            health2 = health2 - penalty;
	            hp2.setText("HP: " + health2);
	            launcher2.projectile.removeFromCanvas();
	            restartBallTwo();
	            resetGoalTwo();
	            chance();        
	       }
	       if (launcher2.projectile.intersects(rectangleBottom2))
	       {
	            health1 = health1 - penalty;
	            hp1.setText("HP: " + health1);
	            launcher2.projectile.removeFromCanvas();
	            restartBallTwo();
	            resetGoalTwo();
	            chance();        
	       }
	       
	     
	     if (launcher.projectile.intersects(rectangleBottom2))
	    {
	        
	        launcher.projectile.removeFromCanvas();
	        restartBallOne();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
	        rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
	        
	    }
	    if (launcher2.projectile.intersects(rectangleBottom))
	    {
	        
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	        
	    }
	   
	   } 
	   else if(goalChance == 5)
	   {
	       
	      
	        if (launcher2.projectile.intersects(rectangleBottom2))
	    {

	        health1 = health1 - 10;
	        hp1.setText("HP: " + health1);
	        launcher2.projectile.removeFromCanvas();
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	    }
	    if (launcher2.projectile.getMaxY() >= .99)
	    {

	        health2 = health2 - 10;
	        hp2.setText("HP: " + health2);
	        launcher2.projectile.removeFromCanvas();
	        restartBallTwo();
	        chance();
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));

	        
	    }
	    
	 
	    if (launcher2.projectile.intersects(rectangleBottom))
	    {
	        
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	        
	    }
	    }
	   
	   else if(goalChance == 9)
	   {
	       specialBallTwo();
	       if (launcher2.projectile.getMaxY() >= .99)
	       {
	            health2 = health2 - 10;
	            hp2.setText("HP: " + health2);
	            launcher2.projectile.removeFromCanvas();
	            restartBallTwo();
	            resetBallTwo();
	            chance();        
	       }
	       if (launcher2.projectile.intersects(rectangleBottom2))
	       {
	            health1 = health1 - penalty;
	            health2 = health2 + 10;
	            hp1.setText("HP: " + health1);
	            hp2.setText("HP: " + health2);
	            launcher2.projectile.removeFromCanvas();
	            restartBallTwo();
	            resetBallTwo();
	            chance();        
	       }
	       
	     
	    if (launcher2.projectile.intersects(rectangleBottom))
	    {
	        
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	        
	    }

	   }
	   
	   
	    else if (launcher2.projectile.intersects(rectangleBottom2))
	    {

	        health1 = health1 - penalty;
	        hp1.setText("HP: " + health1);
	        launcher2.projectile.removeFromCanvas();
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	    }
	    else if (launcher2.projectile.getMaxY() >= .99)
	    {

	        health2 = health2 - penalty;
	        hp2.setText("HP: " + health2);
	        launcher2.projectile.removeFromCanvas();
	        restartBallTwo();
	        chance();
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));

	        
	    }

	    else if (launcher2.projectile.intersects(rectangleBottom))
	    {
	        
	        restartBallTwo();
	        chance();
	       // (randomDouble(-0.10,0.25), randomDouble(-0.40,0.4))
	        rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
	        rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
	        rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
	        
	    }
	   numofshots2--;}
	   checkScore(); 
	       
	}   
	   
	   
   public void checkScore(){
	   if (health1 ==health2){
		   player1Turn();
	   
	   }
	   else if (health1 < health2)
	   {

	    hp1.setText("You lose!");
	    launcher.removeFromCanvas();
	    launcher2.removeFromCanvas();
	    launcher.projectile.removeFromCanvas();
	    launcher2.projectile.removeFromCanvas();
	    
	   }else if (health2 <= health1)
	   {

	    hp2.setText("You lose!");
	    launcher.removeFromCanvas();
	    launcher2.removeFromCanvas();
	    launcher.projectile.removeFromCanvas();
	    launcher2.projectile.removeFromCanvas();
	    
	    }
	
			   
   }
   
   
   ////////////////////END ADVANCE/////////////////////
   
   public void restartBallOne() {
  launcher = new BasketBallLauncherSprite(0.05, 0.5);
  addSprite(launcher);
  }
   
    public void restartBallTwo() {
  launcher2 = new BasketBallLauncherSprite(0.95, 0.5);
  addSprite(launcher2);
  }
   
      ////////////////////END RESTART BALL/////////////////////
   public void specialGoalOne() {
    rectangleBottom.setColor(getColor("orange"));
    rectangleBackboard.setColor(getColor("orange"));
    rectangleFrontboard.setColor(getColor("orange"));
    
    penalty = 20;  
    
  }
   
   public void specialGoalTwo() {
    rectangleBottom2.setColor(getColor("yellow"));
    rectangleBackboard2.setColor(getColor("yellow"));
    rectangleFrontboard2.setColor(getColor("yellow"));
    
    penalty = 20;  
    
  }
   
      ////////////////////END SPECIAL GOAL/////////////////////
   
    public void resetGoalOne() {
    rectangleBottom.setColor(getColor("default"));
    rectangleBackboard.setColor(getColor("default"));
    rectangleFrontboard.setColor(getColor("default"));
    rectangleBottom.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
    rectangleBackboard.setLocation((rectangleBottom.getX() + .15), (rectangleBottom.getY() - .175));
    rectangleFrontboard.setLocation((rectangleBottom.getX() - .125), (rectangleBottom.getY() - .075));
    penalty = 10;
    
    
  }
    
    public void resetGoalTwo() {
    rectangleBottom2.setColor(getColor("purple"));
    rectangleBackboard2.setColor(getColor("purple"));
    rectangleFrontboard2.setColor(getColor("purple"));
    rectangleBottom2.setLocation(randomDouble(0.30,0.7), randomDouble(0.30,0.7));
    rectangleBackboard2.setLocation((rectangleBottom2.getX() - .125), (rectangleBottom2.getY() - .175));
    rectangleFrontboard2.setLocation((rectangleBottom2.getX() + .15), (rectangleBottom2.getY() - .075));
    penalty = 10;
    
    
  }
       ////////////////////END RESET GOAL /////////////////////
    
     public void specialBallOne() {
    launcher.projectile.setColor(Game.getColor("white"));
    
    penalty = 30;  
    
  }
     
     public void specialBallTwo() {
    launcher2.projectile.setColor(Game.getColor("green"));
    
    penalty = 30;  
    
  }
     
        ////////////////////END SPECIAL BALL/////////////////////
   
    public void resetBallOne() {
    launcher.projectile.setColor(Game.getColor("red"));
    
    penalty = 10;
    
    
  }
    
     public void resetBallTwo() {
    launcher2.projectile.setColor(Game.getColor("red"));
    
    penalty = 10;
    
    
  }
       ////////////////////END RESET BALL/////////////////////
    
    public void chance() {
    setChance(Game.getCurrentGame().randomInt(1, 10));
  }
    
       ////////////////////END CHANCE/////////////////////
    public void setChance(int chance) {
    if ((1 <= chance) && (chance <= 10)) {
      goalChance = chance;
    }
}
    
      ////////////////////END SET CHANCE/////////////////////
    
   
}
